apply plugin: 'groovy'  //必须

apply plugin: 'maven-publish'
apply plugin: 'signing'

dependencies {
    implementation gradleApi() //必须
    implementation localGroovy() //必须
    //如果要使用android的API，需要引用这个，实现Transform的时候会用到
    implementation 'com.android.tools.build:gradle:4.0.2'

    // ASM 相关
    implementation 'org.ow2.asm:asm:7.1'
    implementation 'org.ow2.asm:asm-util:7.1'
    implementation 'org.ow2.asm:asm-commons:7.1'
    implementation 'com.tinify:tinify:1.6.4'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.android.support:support-annotations:28.0.0'


    runtime subprojects.collect { project(it.path) }

}

repositories {
    google()
    jcenter()
    mavenCentral() //必须
}


allprojects {
    repositories {
        google()
        jcenter()
    }
}

//把项目入口设置为src/main/groovy
sourceSets {
    main {
        groovy {
            srcDir 'src/main/groovy'
        }
    }
}

task generateSorceJar1(type: Jar) {
    archiveClassifier.set( 'sources')
    from sourceSets.main.java.srcDirs
}

//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator)) + configurations.compile
//}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/8/docs/api"
    }
}

task generateJavadoc(type: Jar, dependsOn:['javadoc']) {
    group = 'jar'
    archiveClassifier.set('javadoc')
    from 'build/docs/javadoc'
}


publishing {
    publications {
        maven(MavenPublication) {
            groupId 'io.githunb.renxh4' //开通maven central时候定义的
            artifactId 'compress_png' //资源名称
            version '0.0.2' //版本名称
            pom {
                name = 'compress_png'
                description = 'jar'
                url = 'https://github.com/renxh4/CompressPng'
                inceptionYear = '2022'

                scm {
                    url = 'https://github.com/renxh4/CompressPng'
                    connection = 'scm:git@https://github.com/renxh4/CompressPng.git'
                    developerConnection = 'scm:git@https://github.com/renxh4/CompressPng.git'
                }

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                        comments = 'A business-friendly OSS license'
                    }
                }

                developers {
                    developer {
                        id = 'xiaohui'
                        name = 'ren'
                        email = '18039395421@163.com'
                        url = 'https://github.com/renxh4/CompressPng'
                    }
                }

                issueManagement {
                    system = 'Github'
                    url = 'https://github.com/renxh4/CompressPng'
                }

            }

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.withType(ModuleDependency) { ModuleDependency dp -> if (dp.version != "unspecified") { // 过滤项目内library引用
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dp.group)
                        dependencyNode.appendNode('artifactId', dp.name)
                        dependencyNode.appendNode('version', dp.version)
                        // for exclusions
                        if (dp.excludeRules.size() > 0) {
                            def exclusions = dependencyNode.appendNode('exclusions')
                            dp.excludeRules.each { ExcludeRule ex ->
                                def exclusion = exclusions.appendNode('exclusion')
                                exclusion.appendNode('groupId', ex.group)
                                exclusion.appendNode('artifactId', ex.module)
                            }
                        }
                }
                }
            }




            artifact './build/libs/OptimizationTool.jar'
            artifact generateSorceJar1
            artifact generateJavadoc

        }

    }

    repositories {
        maven {
            // 指定要上传的maven仓库
            url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            //Maven仓库用户名和密码
            credentials {
                username 'renxhui'
                password 'AdHu!@2012..'
            }
        }
    }
}
signing {
    sign publishing.publications.maven //签名配置
}








